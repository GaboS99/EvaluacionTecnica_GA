# Define las etapas (stages) del pipeline. Las tareas se ejecutan
# secuencialmente en el orden en que se definen aquí.
stages:
  - build
  - security

# -----------------------------------------------------------------------------
# Etapa de Compilación 
#
# Este job se encarga de compilar la aplicación. Es un paso necesario
# para preparar el proyecto para las pruebas de seguridad y para la
# generación de artefactos.
# -----------------------------------------------------------------------------
build_job:
  stage: build
  image: maven:latest # Usa una imagen de Docker con Maven para proyectos Java
  script:
    - echo "Compilando la aplicación WebGoat..."
    - mvn clean install # Comando estándar para limpiar y compilar el proyecto

# -----------------------------------------------------------------------------
# Etapa de Seguridad 
#
# En esta etapa se ejecutan los análisis de seguridad. Los jobs aquí
# corren en paralelo por defecto si están en el mismo stage.
# -----------------------------------------------------------------------------
sca_job:
  stage: security
  image:
    name: "aquasec/trivy:latest" # Trivy es una herramienta open-source para SCA
    entrypoint: [""] # Sobrescribe la entrada para ejecutar comandos de shell
  script:
    - echo "Realizando análisis de composición de software (SCA)..."
    - trivy fs --format json -o sca-report.json . # Escanea el filesystem en busca de dependencias vulnerables
  artifacts:
    when: always # Guarda el reporte incluso si el job falla
    paths:
      - sca-report.json # El reporte se guarda como un artefacto
  allow_failure: true # El pipeline continúa aunque se encuentren vulnerabilidades

secrets_scan_job:
  stage: security
  image: "zricethezav/gitleaks:latest" # Gitleaks es una herramienta para escanear secretos
  script:
    - echo "Escaneando el repositorio en busca de secretos..."
    - gitleaks detect --report-path=secrets-report.json --redact --exit-code 0 # Detecta secretos y crea un reporte
  artifacts:
    when: always
    paths:
      - secrets-report.json # Guarda el reporte de secretos como artefacto
  allow_failure: true
